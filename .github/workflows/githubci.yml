name: WipperSnapper Pull Request CI

on: pull_request

jobs:
  build-project:
    name: Build WipperSnapper
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arduino-platform: ["esp8266", "esp32", "funhouse",
                           "pyportal_tinyusb", "metro_m4_airliftlite_tinyusb"]
    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
         repository: brentru/ci-arduino
         path: ci
    - name: Install CI-Arduino
      run: bash ci/actions_install.sh
      # manually install Adafruit WiFiNINA library fork
    - name: Install extra Arduino libraries
      run: |
        git clone --quiet https://github.com/adafruit/WiFiNINA.git /home/runner/Arduino/libraries/WiFiNINA
    - name: build platforms
      run: python3 ci/build_platform.py ${{ matrix.arduino-platform }}
    - name: upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Files-${GITHUB_REF#refs/heads/}.${GITHUB_SHA}
        path: |
            examples/*/build/*/*.hex
            examples/*/build/*/*.uf2


  clang_and_doxy:
    runs-on: ubuntu-latest
    needs: build-project
    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: actions/checkout@v2

    - uses: actions/checkout@v2
      with:
         repository: adafruit/ci-arduino
         path: ci

    - name: pre-install
      run: bash ci/actions_install.sh

    - name: clang
      run: python3 ci/run-clang-format.py -e "ci/*" -e "bin/*" -e "./src/wippersnapper/*" -e "./src/nanopb/*" -e "./src/pb.h" -e "./src/provisioning/tinyusb/*" -r .

    # - name: doxygen
    #   env:
    #     GH_REPO_TOKEN: ${{ secrets.GH_REPO_TOKEN }}
    #     PRETTYNAME : "Adafruit Wippersnapper Arduino Library"
    #   run: bash ci/doxy_gen_and_deploy.sh

