# SPDX-FileCopyrightText: Adafruit Industries, 2021
#
# SPDX-License-Identifier: MIT
name: WipperSnapper Release CI

on:
  pull_request:
  release:
    types: [published]

jobs:
  release-wippersnapper:
    name: Release WipperSnapper
    runs-on: ubuntu-latest
    needs: clang_and_doxy
    steps:
      - name: Download build artifacts from build-platform steps
        uses: actions/download-artifact@v2
        with:
          name: build-files
      - name: List Files
        run: ls
      - name: Upload Assets to the GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
                  wippersnapper.*.uf2
                  wippersnapper.*.bin

  build-esp32s2:
    name: Build WipperSnapper ESP32-S2
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arduino-platform: ["funhouse_tinyusb", "magtag_tinyusb",
                           "metro_s2_tinyusb", "feather_s2_tinyusb"]
    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: actions/checkout@v2
    - name: Get WipperSnapper version
      run: |
        git fetch --prune --unshallow --tags
        git describe --dirty --tags
        echo >>$GITHUB_ENV WS_VERSION=$(git describe --dirty --tags)
    - uses: actions/checkout@v2
      with:
         repository: brentru/ci-arduino
         path: ci
    - name: Install CI-Arduino
      run: bash ci/actions_install.sh
    - name: Install extra Arduino libraries
      run: |
        git clone --quiet https://github.com/brentru/Adafruit_MQTT_Library.git /home/runner/Arduino/libraries/Adafruit_MQTT_Library
    - name: Build for ESP32-S2
      run: python3 ci/build_platform.py ${{ matrix.arduino-platform }}
    - name: Rename build artifacts to reflect the platform name
      run: |
            mv examples/*/build/*/Wippersnapper_demo.ino.uf2 wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.uf2
            mv examples/*/build/*/Wippersnapper_demo.ino.bin wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.bin
            mv examples/*/build/*/Wippersnapper_demo_staging.ino.uf2 staging.wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.uf2
            mv examples/*/build/*/Wippersnapper_demo_staging.ino.bin staging.wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.bin
    - name: upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-files
        path: |
            wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.uf2
            wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.bin
            staging.wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.uf2
            staging.wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.bin


  build-esp32:
    name: Build WipperSnapper ESP32
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arduino-platform: ["esp32"]
    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: actions/checkout@v2
    - name: Get WipperSnapper version
      run: |
        git fetch --prune --unshallow --tags
        git describe --dirty --tags
        echo >>$GITHUB_ENV WS_VERSION=$(git describe --dirty --tags)
    - uses: actions/checkout@v2
      with:
         repository: adafruit/ci-arduino
         path: ci
    - name: Install CI-Arduino
      run: bash ci/actions_install.sh
    - name: Install extra Arduino libraries
      run: |
        git clone --quiet https://github.com/brentru/Adafruit_MQTT_Library.git /home/runner/Arduino/libraries/Adafruit_MQTT_Library
    - name: build ESP32 platforms
      run: python3 ci/build_platform.py ${{ matrix.arduino-platform }}
    - name: Rename build artifacts to reflect the platform name
      run: |
            mv examples/Wippersnapper_demo/build/esp32.esp32.*/Wippersnapper_demo.ino.bin wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.bin
            mv examples/Wippersnapper_demo_staging/build/esp32.esp32.*/Wippersnapper_demo_staging.ino.bin staging.wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.bin
    - name: upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-files
        path: |
            wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.bin
            staging.wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.bin

  build-samd:
    name: Build WipperSnapper SAMD
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arduino-platform: ["pyportal_tinyusb", "metro_m4_airliftlite_tinyusb"]
    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: actions/checkout@v2
    - name: Get WipperSnapper version
      run: |
        git fetch --prune --unshallow --tags
        git describe --dirty --tags
        echo >>$GITHUB_ENV WS_VERSION=$(git describe --dirty --tags)
    - uses: actions/checkout@v2
      with:
         repository: brentru/ci-arduino
         path: ci
    - name: Install CI-Arduino
      run: bash ci/actions_install.sh
      # manually install Adafruit WiFiNINA library fork
    - name: Install extra Arduino libraries
      run: |
        git clone --quiet https://github.com/adafruit/WiFiNINA.git /home/runner/Arduino/libraries/WiFiNINA
        git clone --quiet https://github.com/brentru/Adafruit_MQTT_Library.git /home/runner/Arduino/libraries/Adafruit_MQTT_Library
    - name: build platforms
      run: python3 ci/build_platform.py ${{ matrix.arduino-platform }}
    - name: Rename build artifacts to reflect the platform name
      run: |
            mv examples/*/build/*/Wippersnapper_demo.ino.uf2 wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.uf2
            mv examples/*/build/*/Wippersnapper_demo.ino.hex wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.hex
            mv examples/*/build/*/Wippersnapper_demo_staging.ino.uf2 staging.wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.uf2
            mv examples/*/build/*/Wippersnapper_demo_staging.ino.hex staging.wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.hex
    - name: upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-files
        path: |
            wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.uf2
            wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.hex
            staging.wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.uf2
            staging.wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.hex


  clang_and_doxy:
    runs-on: ubuntu-latest
    needs: [build-samd, build-esp32, build-esp32s2]
    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: actions/checkout@v2

    - uses: actions/checkout@v2
      with:
         repository: adafruit/ci-arduino
         path: ci

    - name: pre-install
      run: bash ci/actions_install.sh

    - name: clang
      run: python3 ci/run-clang-format.py -r -e "ci/*" -e "bin/*" -e src/nanopb -e src/wippersnapper -e src/pb.h -e src/provisioning/tinyusb  src/

    - name: doxygen
      env:
        GH_REPO_TOKEN: ${{ secrets.GH_REPO_TOKEN }}
        PRETTYNAME : "Adafruit.io WipperSnapper Library"
      run: bash ci/doxy_gen_and_deploy.sh