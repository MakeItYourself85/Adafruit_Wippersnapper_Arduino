/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_PIN_V1_PROTO_PIN_V1_PIN_PB_H_INCLUDED
#define PB_PIN_V1_PROTO_PIN_V1_PIN_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _pin_v1_PinResponse {
    pin_v1_PinResponse_PIN_RESPONSE_UNSPECIFIED = 0,
    pin_v1_PinResponse_PIN_RESPONSE_OK = 1,
    pin_v1_PinResponse_PIN_RESPONSE_INPUT_ONLY = 2,
    pin_v1_PinResponse_PIN_RESPONSE_INVALID_DIRECTION = 3,
    pin_v1_PinResponse_PIN_RESPONSE_INVALID_PULL = 4,
    pin_v1_PinResponse_PIN_RESPONSE_INVALID_DATA = 5
} pin_v1_PinResponse;

typedef enum _pin_v1_ConfigurePinRequest_Mode {
    pin_v1_ConfigurePinRequest_Mode_MODE_UNSPECIFIED = 0,
    pin_v1_ConfigurePinRequest_Mode_MODE_ANALOG = 1,
    pin_v1_ConfigurePinRequest_Mode_MODE_DIGITAL = 2,
    pin_v1_ConfigurePinRequest_Mode_MODE_PULL_UP = 3
} pin_v1_ConfigurePinRequest_Mode;

typedef enum _pin_v1_ConfigurePinRequest_Direction {
    pin_v1_ConfigurePinRequest_Direction_DIRECTION_UNSPECIFIED = 0,
    pin_v1_ConfigurePinRequest_Direction_DIRECTION_INPUT = 1,
    pin_v1_ConfigurePinRequest_Direction_DIRECTION_OUTPUT = 2
} pin_v1_ConfigurePinRequest_Direction;

typedef enum _pin_v1_ConfigurePinRequest_Pull {
    pin_v1_ConfigurePinRequest_Pull_PULL_UNSPECIFIED = 0,
    pin_v1_ConfigurePinRequest_Pull_PULL_UP = 1,
    pin_v1_ConfigurePinRequest_Pull_PULL_DOWN = 2
} pin_v1_ConfigurePinRequest_Pull;

/* Struct definitions */
typedef struct _pin_v1_ConfigurePinRequest {
    char pin_name[5];
    pin_v1_ConfigurePinRequest_Mode mode;
    pin_v1_ConfigurePinRequest_Direction direction;
    pin_v1_ConfigurePinRequest_Pull pull;
    int32_t period;
} pin_v1_ConfigurePinRequest;

typedef struct _pin_v1_ConfigurePinResponse {
    pin_v1_PinResponse response;
} pin_v1_ConfigurePinResponse;

typedef struct _pin_v1_PinEventRequest {
    char pin_name[5];
    char pin_value[12];
} pin_v1_PinEventRequest;

typedef struct _pin_v1_PinEventResponse {
    pin_v1_PinResponse response;
} pin_v1_PinEventResponse;


/* Helper constants for enums */
#define _pin_v1_PinResponse_MIN pin_v1_PinResponse_PIN_RESPONSE_UNSPECIFIED
#define _pin_v1_PinResponse_MAX pin_v1_PinResponse_PIN_RESPONSE_INVALID_DATA
#define _pin_v1_PinResponse_ARRAYSIZE ((pin_v1_PinResponse)(pin_v1_PinResponse_PIN_RESPONSE_INVALID_DATA+1))

#define _pin_v1_ConfigurePinRequest_Mode_MIN pin_v1_ConfigurePinRequest_Mode_MODE_UNSPECIFIED
#define _pin_v1_ConfigurePinRequest_Mode_MAX pin_v1_ConfigurePinRequest_Mode_MODE_PULL_UP
#define _pin_v1_ConfigurePinRequest_Mode_ARRAYSIZE ((pin_v1_ConfigurePinRequest_Mode)(pin_v1_ConfigurePinRequest_Mode_MODE_PULL_UP+1))

#define _pin_v1_ConfigurePinRequest_Direction_MIN pin_v1_ConfigurePinRequest_Direction_DIRECTION_UNSPECIFIED
#define _pin_v1_ConfigurePinRequest_Direction_MAX pin_v1_ConfigurePinRequest_Direction_DIRECTION_OUTPUT
#define _pin_v1_ConfigurePinRequest_Direction_ARRAYSIZE ((pin_v1_ConfigurePinRequest_Direction)(pin_v1_ConfigurePinRequest_Direction_DIRECTION_OUTPUT+1))

#define _pin_v1_ConfigurePinRequest_Pull_MIN pin_v1_ConfigurePinRequest_Pull_PULL_UNSPECIFIED
#define _pin_v1_ConfigurePinRequest_Pull_MAX pin_v1_ConfigurePinRequest_Pull_PULL_DOWN
#define _pin_v1_ConfigurePinRequest_Pull_ARRAYSIZE ((pin_v1_ConfigurePinRequest_Pull)(pin_v1_ConfigurePinRequest_Pull_PULL_DOWN+1))


/* Initializer values for message structs */
#define pin_v1_ConfigurePinRequest_init_default  {"", _pin_v1_ConfigurePinRequest_Mode_MIN, _pin_v1_ConfigurePinRequest_Direction_MIN, _pin_v1_ConfigurePinRequest_Pull_MIN, 0}
#define pin_v1_ConfigurePinResponse_init_default {_pin_v1_PinResponse_MIN}
#define pin_v1_PinEventRequest_init_default      {"", ""}
#define pin_v1_PinEventResponse_init_default     {_pin_v1_PinResponse_MIN}
#define pin_v1_ConfigurePinRequest_init_zero     {"", _pin_v1_ConfigurePinRequest_Mode_MIN, _pin_v1_ConfigurePinRequest_Direction_MIN, _pin_v1_ConfigurePinRequest_Pull_MIN, 0}
#define pin_v1_ConfigurePinResponse_init_zero    {_pin_v1_PinResponse_MIN}
#define pin_v1_PinEventRequest_init_zero         {"", ""}
#define pin_v1_PinEventResponse_init_zero        {_pin_v1_PinResponse_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define pin_v1_ConfigurePinRequest_pin_name_tag  1
#define pin_v1_ConfigurePinRequest_mode_tag      2
#define pin_v1_ConfigurePinRequest_direction_tag 3
#define pin_v1_ConfigurePinRequest_pull_tag      4
#define pin_v1_ConfigurePinRequest_period_tag    5
#define pin_v1_ConfigurePinResponse_response_tag 1
#define pin_v1_PinEventRequest_pin_name_tag      1
#define pin_v1_PinEventRequest_pin_value_tag     2
#define pin_v1_PinEventResponse_response_tag     1

/* Struct field encoding specification for nanopb */
#define pin_v1_ConfigurePinRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   pin_name,          1) \
X(a, STATIC,   SINGULAR, UENUM,    mode,              2) \
X(a, STATIC,   SINGULAR, UENUM,    direction,         3) \
X(a, STATIC,   SINGULAR, UENUM,    pull,              4) \
X(a, STATIC,   SINGULAR, INT32,    period,            5)
#define pin_v1_ConfigurePinRequest_CALLBACK NULL
#define pin_v1_ConfigurePinRequest_DEFAULT NULL

#define pin_v1_ConfigurePinResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    response,          1)
#define pin_v1_ConfigurePinResponse_CALLBACK NULL
#define pin_v1_ConfigurePinResponse_DEFAULT NULL

#define pin_v1_PinEventRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   pin_name,          1) \
X(a, STATIC,   SINGULAR, STRING,   pin_value,         2)
#define pin_v1_PinEventRequest_CALLBACK NULL
#define pin_v1_PinEventRequest_DEFAULT NULL

#define pin_v1_PinEventResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    response,          1)
#define pin_v1_PinEventResponse_CALLBACK NULL
#define pin_v1_PinEventResponse_DEFAULT NULL

extern const pb_msgdesc_t pin_v1_ConfigurePinRequest_msg;
extern const pb_msgdesc_t pin_v1_ConfigurePinResponse_msg;
extern const pb_msgdesc_t pin_v1_PinEventRequest_msg;
extern const pb_msgdesc_t pin_v1_PinEventResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define pin_v1_ConfigurePinRequest_fields &pin_v1_ConfigurePinRequest_msg
#define pin_v1_ConfigurePinResponse_fields &pin_v1_ConfigurePinResponse_msg
#define pin_v1_PinEventRequest_fields &pin_v1_PinEventRequest_msg
#define pin_v1_PinEventResponse_fields &pin_v1_PinEventResponse_msg

/* Maximum encoded size of messages (where known) */
#define pin_v1_ConfigurePinRequest_size          23
#define pin_v1_ConfigurePinResponse_size         2
#define pin_v1_PinEventRequest_size              12
#define pin_v1_PinEventResponse_size             2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
